version: '3.3'

services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .env
    secrets:
      - site_owner
      - firefly_app_key
      - firefly_db_password
    networks:
      - traefik-public
      - firefly_iii
    depends_on:
      - db
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.firefly-http.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.firefly-http.entrypoints=http
        - traefik.http.routers.firefly-http.middlewares=https-redirect
        - traefik.http.routers.firefly-https.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.firefly-https.entrypoints=https
        - traefik.http.routers.firefly-https.tls=true
        - traefik.http.routers.firefly-https.tls.certresolver=le
        - traefik.http.services.firefly.loadbalancer.server.port=8080

  db:
    image: mariadb
    hostname: db
    env_file: .db.env
    secrets:
      - firefly_db_password
    networks:
      - firefly_iii
    volumes:
      - firefly_iii_db:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_iii_importer
    networks:
      - firefly_iii
    depends_on:
      - app
    env_file: .importer.env
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.firefly-http.rule=Host(`${IMPORTER_DOMAIN?Variable not set}`)
        - traefik.http.routers.firefly-http.entrypoints=http
        - traefik.http.routers.firefly-http.middlewares=https-redirect
        - traefik.http.routers.firefly-https.rule=Host(`${IMPORTER_DOMAIN?Variable not set}`)
        - traefik.http.routers.firefly-https.entrypoints=https
        - traefik.http.routers.firefly-https.tls=true
        - traefik.http.routers.firefly-https.tls.certresolver=le
        - traefik.http.services.firefly.loadbalancer.server.port=8080

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    command: sh -c "echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/REPLACEME\" | crontab - && crond -f -L /dev/stdout"

volumes:
  firefly_iii_upload:
  firefly_iii_db:


networks:
  traefik-public:
    external: true
  firefly_iii:
    driver: overlay

secrets:
  site_owner:
    external: true
  firefly_db_password:
    external: true
  firefly_app_key:
    external: true
